.386
;Задайте объём ПЗУ в байтах
RomSize    EQU   1000h                   ;4Кб для программного кода

           NMax = 50                     ;Число повторений при вводе с кнопки

           SensPort1 = 00FEh             ;Порт ввода состояния датчиков пожара - этаж 1 
           SensPort2 = 00FDh             ;Порт ввода состояния датчиков пожара - этаж 2
           SensPort3 = 00FBh             ;Порт ввода состояния датчиков взлома - этаж 1 
           SensPort4 = 00F7h             ;Порт ввода состояния датчиков взлома - этаж 2

           KnPort1 = 00EFh               ;Порт ввода кнопок постановки комнат под охрану - этаж 1 
           KnPort2 = 00DFh               ;Порт ввода кнопок постановки комнат под охрану - этаж 2
           KnPort3 = 00BFh               ;Порт ввода с кнопок управления индикацией

           SvPort1 = 00EFh               ;Адрес 1-го порта вывода для двоичных индикаторов - этаж 1
           SvPort2 = 00DFh               ;Адрес 2-го порта вывода для двоичных индикаторов - этаж 2 

           UprPort = 00BFh               ;Порт управления звонком и индикаторами режимов

           BellTime =  20                ;Длительность включения звонка
           PulseTime = 20                ;Длительность включения при мигании индикаторов     
           PauseTime = 20                ;Длительность паузы при мигании индикаторов

Data       SEGMENT use16 AT 0040h 
;Здесь размещаются описания переменных

           FlBell  db ?                  ;Флаг управления звонком (;Флаг общей тревоги)
           Fl1 db ?                      ;Флаг формирования свечения индикаторов всех охраняемых комнат
           Fl2 db ?                      ;Флаг формирования свечения индикаторов охраняемых комнат в которых не сработали датчики  

           SensFireStatus  db 2 dup (?)  ;Состояние датчиков пожара
           SensBreachStatus  db 2 dup (?);Состояние датчиков взлома
           KeyOhrStatus db 2 dup (?)     ;Состояние кнопок постановки комнат под охрану
           KeyUprStatus db ?             ;Состояние кнопок управления индикацией и звонком - биты 0, 1, 2, 3 
				
           KomnStatus db 2 dup (?)       ;Комнаты в которых сработали датчики 1 этаж (мл. байт) и 2 этаж (ст. байт)
		   KomnAlarm db 2 dup (?)
           ;KomnStatus db 2 dup (?)    ;Комнаты находящиеся под охраной, в которых сработали датчики
           KomnFireOut db 2 dup (?)      ;Комнаты находящиеся под охраной, в которых сработали датчики пожара
           KomnBreachOut db 2 dup (?)    ;Комнаты находящиеся под охраной, в которых сработали датчики взлома
      
           CountBell dw ?                ;Длительность включения звонка
           CountPause dw ?               ;Длительность паузы при мигании индикаторов
           CountPulse dw ?               ;Длительность включения при мигании индикаторов       

           ;FireFlag  db ?                ;Флаг наличия пожара
           ;BreachFlag  db ?              ;Флаг наличия взлома
           
Data       ENDS

;Задайте необходимый адрес стека
Stk        SEGMENT use16 AT 60h 
;Задайте необходимый размер стека
           dw    32 dup (?)
StkTop     Label Word
Stk        ENDS

InitData   SEGMENT use16
InitDataStart:
;Здесь размещаются описания констант

InitDataEnd:
InitData   ENDS

Code       SEGMENT use16
       ASSUME cs:Code,ds:Data,ss:Stk

;Здесь размещаются описания программных модулей 
               
FuncPrep Proc 
          
           mov word ptr KeyOhrStatus,0    ;Вначале все кнопки не нажаты
           mov word ptr SensFireStatus,0  ;Вначале все датчики пожара не активны 
           mov word ptr SensBreachStatus,0;Вначале все датчики взлома не активны 
           mov word ptr KomnStatus,0      ;все комнаты в порядке
		   mov word ptr KomnAlarm, 0 
           mov word ptr KomnStatus, 0
           mov word ptr KomnFireOut, 0
           mov word ptr KomnBreachOut, 0
           
  ;Инициализация флагов управления
             
           mov FlBell,0                  ;Флаг управления звонком     
           mov Fl1, 0FFh                 ;Флаг формирования интервала 1 установлен
           mov Fl2,0                     ;Флаг формирования интервала 2 сброшен
			
           ;mov FireFlag,0                ;Флаг наличия пожара
           ;mov BreachFlag,0              ;Флаг наличия взлома

           mov CountBell, BellTime       ;Длительность включения звонка
           mov CountPause, PauseTime     ;Длительность паузы при мигании индикаторов
           mov CountPulse, PulseTime     ;Длительность включения при мигании индикаторов      
           CALL Flashing                 ;Сигнализация начала работы устройства
		   
           ret
FuncPrep Endp

Flashing PROC ;Выключить на короткое время звонок и сигнал на пульт пожарной охраны

           MOV AL, 0FFh
           Out SvPort1, AL
           OUT SvPort2, AL
           OUT UprPort, AL
			
           MOV DX, 0010h
           MOV BX, 0000h 
DDelay0:
           SUB BX, 1  
           SBB DX, 0   
           MOV SI, BX
           OR SI, DX
           JNZ DDelay0
			
           MOV AL, 0
           Out SvPort1, AL
           OUT SvPort2, AL
           OUT UprPort, AL
						
           RET
Flashing ENDP
          
;Подмодуль "Гашение дребезга кнопок"
;Передаваемые параметры - адрес порта ввода с кнопок (в DX)
VibrDestr  PROC  NEAR
VD1:       mov   ah,al                   ;Сохранение исходного состояния
           mov   cl,0                    ;Сброс счётчика повторений
VD2:       in    al,dx                   ;Ввод текущего состояния
           cmp   ah,al                   ;Текущее состояние=исходному?
           jne   VD1                     ;Переход, если нет
           inc   cl                      ;Инкремент счётчика повторений
           cmp   cl,NMax                 ;Конец дребезга?
           jne   VD2                     ;Переход, если нет
           mov   al,ah                   ;Восстановление местоположения данных
           ret
VibrDestr  ENDP

KeyOhrInput Proc
;ввод состояния кнопок постановки комнат под охрану 
           lea bx,KeyOhrStatus           ;Массив состояния кнопок
           mov dx,KnPort1                ;адрес порта использует VibrDestr
                                         ;Адрес порта ввода - этаж 1
           in	al,dx	                 ;Ввод из порта
           call	VibrDestr                ;Гашение дребезга
           not al
           mov [bx], al                  ;Сохранить состояние кнопок постановки комнат под охрану - этаж 1
           
           mov dx,KnPort2                ;адрес порта использует VibrDestr
                                         ;Адрес порта ввода - этаж 2
           in	al,dx	                 ;Ввод из порта
           call	VibrDestr                ;Гашение дребезга
           not al
           mov [bx+1], al                ;Сохранить состояние кнопок постановки комнат под охрану - этаж 2
           ret

KeyOhrInput endp

KeyUprInput Proc
;ввод состояния кнопок управления индикацией 
 
           ;Адрес порта ввода - кнопки управления индикацией             
           mov dx,KnPort3                ;адрес порта использует VibrDestr
           in	al,dx                    ;Ввод из порта
           call	VibrDestr                ;Гашение дребезга
           mov  KeyUprStatus, al         ;Сохранить состояние кнопок 
           ret
;результат - KeyUprStatus, 0 - кнопка активна            
KeyUprInput Endp

SensVzlInput Proc ;ввод с датчиков взлома
           lea si,SensBreachStatus       ;Массив состояния датчиков
           mov dx,SensPort3              ;адрес порта использует VibrDestr
                                         ;SensPort3 - Адрес порта ввода (этаж 1)
           in	al,dx                    ;Ввод из порта
		   
           call	VibrDestr                ;Гашение дребезга
           not al
           mov [si], al                  ;Сохранить состояние  датчиков взлома - этаж 1
                     
           mov dx,SensPort4              ;адрес порта использует VibrDestr
                                         ;SensPort4 - Адрес порта ввода (этаж 2)
           in	al,dx	                 ;Ввод из порта
           call	VibrDestr                ;Гашение дребезга
           not al
           mov [si+1], al                ;Сохранить состояние  датчиков взлома - этаж 2
           
           MOV AX, Word ptr SensBreachStatus
           ;CMP AX, 0                     ;есть пожар?
           ;JZ M1                         ;да
           ;MOV BreachFlag, 0FFh          ;флаг наличия пожара = 1
           ;JMP M2                        ;нет
M1:        ;MOV BreachFlag, 0             ;флаг наличия пожара = 0
M2:        ret
SensVzlInput endp

SensPojInput Proc ;ввод с датчиков пожара
           lea si,SensFireStatus         ;Массив состояния датчиков
           mov dx,SensPort1              ;адрес порта использует VibrDestr
                                         ;SensPort1 - Адрес порта ввода (этаж 1)
           in	al,dx                    ;Ввод из порта		   
           call	VibrDestr                ;Гашение дребезга
           not al
           mov [si], al                  ;Сохранить состояние  датчиков пожара - этаж 1
                     
           mov dx,SensPort2              ;адрес порта использует VibrDestr
                                         ;SensPort2 - Адрес порта ввода (этаж 2)
           in	al,dx	                 ;Ввод из порта	   
           call	VibrDestr                ;Гашение дребезга
           not al
           mov [si+1], al                ;Сохранить состояние  датчиков пожара - этаж 2
		   
           MOV AX, Word ptr SensFireStatus
           ;CMP AX, 0
           ;JZ M1
           ;MOV FireFlag, 0FFh
           ;JMP M2
M1:       ;MOV FireFlag, 0
M2:        ret
SensPojInput endp

;выводить охраняемые комнаты и все комнаты где пожар
 KomnStatusForm1 Proc 
           mov ax,word ptr SensFireStatus    ;датчики пожара
           mov dx,word ptr KeyOhrStatus  ;охраняемые комнаты
           OR ax,dx
           mov word ptr KomnStatus,ax        ;сохранить
         
           ret
KomnStatusForm1 Endp

;комнаты где сработали датчики
KomnStatusForm2 Proc 
           mov ax,word ptr SensFireStatus    ;датчики пожара
           mov dx,word ptr SensBreachStatus  ;датчики взлома
           OR ax,dx
           mov word ptr KomnAlarm,ax        ;сохранить комнаты где сработали датчики
         
           ret
KomnStatusForm2 Endp

FormFire PROC 
           mov ax,word ptr SensFireStatus ;датчики пожара
           ;mov dx,word ptr KeyOhrStatus   ;
           ;and ax,dx
           mov word ptr KomnFireOut,ax    ;сохранить комнаты где сработали датчики пожара
           RET
FormFire ENDP

FormBreach PROC 
           mov ax,word ptr SensBreachStatus ;датчики взлома
           mov dx,word ptr KeyOhrStatus ;комната под охраной
           and ax,dx
           mov word ptr KomnBreachOut,ax    ;сохранить охраняемые комнаты где сработали датчики взлома
           RET
FormBreach ENDP

;Модуль "Сформировать флаг управления звонком"
BellFl Proc
           ;CMP word ptr KomnStatus, 0 ;хотя бы в одной из охраняемых комнат сработал датчик
		   CMP word ptr KomnFireOut, 0 ;есть пожар в любой
		   jnz m1
		   CMP word ptr KomnBreachOut, 0
		   ;есть взлом в охраняемой
           jZ BellOff                    ;нет
                                         ;да, реализовать временную задержку
m1:           dec word ptr CountBell        ;декремент счетчика числа проходов
           cmp word ptr CountBell,0      ;все проходы?
           jne BellOut                   ;нет, ничего не делать
                                         ;да, все, задержка закончилась         
           mov CountBell,BellTime        ;перезагрузить счетчик числа проходов
           not FlBell                    ;Инвертировать флаг управления звонком
           jmp Short BellOut             ;На выход
BellOff:   
           mov FlBell,0                   
BellOut:   ret
BellFl Endp

;выводить охраняемые комнаты и все комнаты где пожар
ProtectRoomInd PROC ;свечение индикаторов комнат, поставленных под охрану
           cmp Fl1,0FFh                  ;Идет формирование интервала 1?
           jne Int1Out 

           CMP KeyUprStatus, 0FFh ;не нажаты кнопки "пожар" или "взлом"
           JNZ Int1Out;выходим

M2:        mov al, KomnStatus
           Out SvPort1, al
           MOV AL, KomnStatus+1
           OUT SvPort2, al
			
           dec word ptr CountPause       ;Декремент счетчика числа проходов 1
           jne Int1Out                   ;Больше ничего не делаем. если не все проходы
                                         ;все проходы
           mov Fl1,0                     ;Интервал 1 закончен
           mov Fl2,0FFh                  ;Формируем интервал 2
           mov CountPause,PauseTime      ;Перезагрузить счетчик числа проходов
Int1Out:           
           ret
ProtectRoomInd ENDP

;выводить охраняемые комнаты где нет тревоги (гасить где сработали датчики)
;вывод комнаты под охраной где все норм
TurnOffTheLigth PROC
           cmp Fl2,0FFh                  ;Идет формирование интервала 2?
           jne Int2Out
           
           CMP KeyUprStatus, 0FFh        ;нажаты обе кнопки 
           JNZ Int2Out                   ;да
           MOV AX, word ptr KomnAlarm
		   NOT AX
           MOV DX, word ptr KeyOhrStatus
           AND AX, DX

           OUT SvPort1, AL               ;выводим все охрвняемые комнаты где не сработали датчики 
           XCHG AH, AL
           OUT SvPort2, AL
			
           dec word ptr CountPulse       ;Декремент счетчика числа проходов 2
           jne Int2Out                   ;Ничего не делаем. если не все проходы
                                         ;все проходы
           mov Fl2,0                     ;Интервал 2 закончен
           mov Fl1,0FFh                  ;Формируем интервал 1      
           mov CountPulse,PulseTime      ;Перезагрузить счетчик числа проходов                      
Int2Out:  
           ret
TurnOffTheLigth ENDP

ControlOut PROC ;вывод на порт управления;Вывод на индикаторы режима отображения       
           mov al, KeyUprStatus
           not al
           CMP word ptr KomnAlarm, 0 ;хотя бы в одной комнате, поставленной под охрану сработал датчик
           JZ M1                         ;нет
           cmp FlBell, 0FFh              ;Включить звонок?
           jnz M1                        ;Нет, не нужно включать
			
           MOV DL, 0Ch
           OR AL, DL
M1:        OUT UprPort, al
           RET
ControlOut ENDP

BreachOutput Proc
           CMP KeyUprStatus, 0FEh
           JNZ M1
           MOV AL, KomnBreachOut
           OUT SvPort1, AL
           MOV AL, KomnBreachOut+1
           OUT SvPort2, AL			
M1:        
           RET
BreachOutput ENDP

FireOutput Proc
           CMP KeyUprStatus, 0FDh
           JNZ M1
           MOV AL, KomnFireOut
           OUT SvPort1, AL
           MOV AL, KomnFireOut+1
           OUT SvPort2, AL	
M1:			
           RET
FireOutput ENDP

FireBreachOutput Proc
           MOV AL, 3
           NOT AL
           CMP KeyUprStatus, AL
           JNZ M1
           MOV AX, word ptr KomnFireOut
           MOV DX, word ptr KomnBreachOut
           OR AX, DX
           OUT SvPort1, AL
           MOV AL, AH
           OUT SvPort2, AL
M1:
           RET
FireBreachOutput ENDP

BellAllarm PROC
           CMP word ptr KomnAlarm, 0;есть тревога хотя бы в одной из комнат(взлом в комнатах под охраной или пожар в любой)
           JZ M1;нет
           cmp FlBell, 0FFh               ;Включить звонок?
           jnz M1                         ;Нет, не нужно включать
           MOV AL, KeyUprStatus
           NOT AL
           MOV DL, 0Ch
           OR AL, DL
           OUT UprPort, AL
M1:        RET
BellAllarm ENDP
 
Start:     ;системная подготовка
           mov   ax,Data
           mov   ds,ax
           mov   ax,Stk
           mov   ss,ax
           lea   sp,StkTop
           
;Здесь размещается код программы
           Call FuncPrep                 ;Функциональная подготовка    
cykle:     
;ввод
           CALL KeyOhrInput              ;Ввод с кнопок постановки под охрану
           CALL KeyUprInput              ;Ввод с кнопок управления
			
           CALL SensVzlInput             ;ввод с датчиков взлома
           CALL SensPojInput             ;ввод с датчиков пожара
           
;обработка
           CALL KomnStatusForm1           ;формирование массива комнат в которых сработали датчики
		   CALL KomnStatusForm2
           ;CALL KomnStatusCheck          ;формирование массива охраняемых комнаты, в которых сработали датчики
           CALL FormFire                 ;формирование массива охраняемых комнаты, в которых сработали датчики пожара
           CALL FormBreach               ;формирование массива охраняемых комнаты, в которых сработали датчики взлома
			
           call BellFl                   ;формирование флага тревоги (звонка)
           
;вывод
           CALL ProtectRoomInd           ;свечение индикаторов охраняемых комнат (+комнат где пожар)
           CALL TurnOffTheLigth          ;пауза в свечении индикаторов охраняемых комнат, где сработали датчики 
           
           CALL ControlOut               ;Вывод на индикаторы режима отображения
           
           CALL BreachOutput             ;вывод комнат при нажатии на кнопку "взлом"
           CALL FireOutput               ;вывод комнат при нажатии на кнопку "пожар"
           CALL FireBreachOutput         ;вывод при нажатии кнопок "пожар" и "взлом" одновременно
           
           CALL BellAllarm               ;вывод индикатора тревоги и звонка
           
           jmp cykle                     ;зациклить
           
;В следующей строке необходимо указать смещение стартовой точки
           org   RomSize-16-((InitDataEnd-InitDataStart+15) AND 0FFF0h)
           ASSUME cs:NOTHING
           jmp   Far Ptr Start
Code       ENDS
END		Start

;выводить охраняемые комнаты и все комнаты где пожар
;выводить охраняемые комнаты где нет тревоги (гасить где сработали датчики)
;выводить все комнаты где пожар
;выводить охраняемые комнаты где взлом